apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: infrastructures.config.openshift.io
spec:
  group: config.openshift.io
  names:
    kind: Infrastructure
    listKind: InfrastructureList
    plural: infrastructures
    singular: infrastructure
  scope: Cluster
  versions:
  - name: v1
    served: true
    storage: true
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          description: Standard object's metadata.
          type: object
        spec:
          description: spec holds user settable values for configuration
          properties:
            cloudConfig:
              description: cloudConfig is a reference to a ConfigMap containing the
                cloud provider configuration file. This configuration file is used
                to configure the Kubernetes cloud provider integration when using
                the built-in cloud provider integration or the external cloud controller
                manager. The namespace for this config map is openshift-config.
              properties:
                key:
                  description: Key allows pointing to a specific key/value inside
                    of the configmap.  This is useful for logical file references.
                  type: string
                name:
                  type: string
              type: object
          type: object
        status:
          description: status holds observed values from the cluster. They may not
            be overridden.
          properties:
            apiServerInternalURI:
              description: apiServerInternalURL is a valid URI with scheme(http/https),
                address and port.  apiServerInternalURL can be used by components
                like kubelets, to contact the Kubernetes API server using the infrastructure
                provider rather than Kubernetes networking.
              type: string
            apiServerURL:
              description: apiServerURL is a valid URI with scheme(http/https), address
                and port.  apiServerURL can be used by components like the web console
                to tell users where to find the Kubernetes API.
              type: string
            etcdDiscoveryDomain:
              description: 'etcdDiscoveryDomain is the domain used to fetch the SRV
                records for discovering etcd servers and clients. For more info: https://github.com/etcd-io/etcd/blob/329be66e8b3f9e2e6af83c123ff89297e49ebd15/Documentation/op-guide/clustering.md#dns-discovery'
              type: string
            infrastructureName:
              description: infrastructureName uniquely identifies a cluster with a
                human friendly name. Once set it should not be changed. Must be of
                max length 27 and must have only alphanumeric or hyphen characters.
              type: string
            platform:
              description: 'platform is the underlying infrastructure provider for
                the cluster.  Deprecated: Use platformStatus.type instead.'
              type: string
            platformStatus:
              description: platformStatus holds status information specific to the
                underlying infrastructure provider.
              properties:
                aws:
                  description: AWS contains settings specific to the Amazon Web Services
                    infrastructure provider.
                  properties:
                    region:
                      description: region holds the default AWS region for new AWS
                        resources created by the cluster.
                      type: string
                  type: object
                type:
                  description: type is the underlying infrastructure provider for
                    the cluster. This value controls whether infrastructure automation
                    such as service load balancers, dynamic volume provisioning, machine
                    creation and deletion, and other integrations are enabled. If
                    None, no infrastructure automation is enabled. Allowed values
                    are "AWS", "Azure", "BareMetal", "GCP", "Libvirt", "OpenStack",
                    "VSphere", and "None". Individual components may not support all
                    platforms, and must handle unrecognized platforms as None if they
                    do not support that platform.
                  type: string
              type: object
          type: object
      required:
      - spec
